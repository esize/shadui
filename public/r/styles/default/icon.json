{
  "name": "icon",
  "type": "registry:ui",
  "dependencies": [
    "lucide-react"
  ],
  "files": [
    {
      "path": "ui/icon.tsx",
      "content": "import { type LucideProps, icons } from \"lucide-react\";\n\ntype IconComponentName = keyof typeof icons;\n\ninterface IconProps extends LucideProps {\n  name: string; // because this is coming from the CMS\n}\n\n// 👮‍♀️ guard\nfunction isValidIconComponent(\n  componentName: string\n): componentName is IconComponentName {\n  return componentName in icons;\n}\n\nexport function DynamicIcon({ name, ...props }: IconProps) {\n  // we need to convert kebab-case to PascalCase because we formerly relied on\n  // lucide-react/dynamicIconImports and the icon names are what are stored in the CMS.\n  const kebabToPascal = (str: string) =>\n    str\n      .split(\"-\")\n      .map((word) => word.charAt(0).toUpperCase() + word.slice(1))\n      .join(\"\");\n\n  const componentName = kebabToPascal(name);\n\n  // ensure what is in the CMS is a valid icon component\n  if (!isValidIconComponent(componentName)) {\n    return null;\n  }\n\n  // lucide-react/dynamicIconImports makes makes NextJS development server very slow\n  // https://github.com/lucide-icons/lucide/issues/1576\n  const Icon = icons[componentName];\n\n  return <Icon {...props} />;\n}\n",
      "type": "registry:ui",
      "target": ""
    }
  ]
}